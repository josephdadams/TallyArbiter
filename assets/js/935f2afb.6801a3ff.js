"use strict";(self.webpackChunktallyarbiter_docs=self.webpackChunktallyarbiter_docs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/TallyArbiter/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Installation","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Desktop Application / Installer","href":"/TallyArbiter/docs/installation/desktop-app","docId":"installation/desktop-app","unlisted":false},{"type":"link","label":"CLI","href":"/TallyArbiter/docs/installation/cli","docId":"installation/cli","unlisted":false},{"type":"link","label":"Docker","href":"/TallyArbiter/docs/installation/docker","docId":"installation/docker","unlisted":false},{"type":"link","label":"Build and run from source","href":"/TallyArbiter/docs/installation/from-source","docId":"installation/from-source","unlisted":false}]},{"type":"category","label":"Usage","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Control Interface","href":"/TallyArbiter/docs/usage/control-interface","docId":"usage/control-interface","unlisted":false},{"type":"category","label":"Sections","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Devices","href":"/TallyArbiter/docs/usage/sections/devices","docId":"usage/sections/devices","unlisted":false},{"type":"link","label":"Sources","href":"/TallyArbiter/docs/usage/sections/sources","docId":"usage/sections/sources","unlisted":false},{"type":"link","label":"Remote Tally Viewing (Listener Clients)","href":"/TallyArbiter/docs/usage/sections/listener-clients","docId":"usage/sections/listener-clients","unlisted":false},{"type":"link","label":"TSL 3.1 Protocol Conversion","href":"/TallyArbiter/docs/usage/sections/tsl","docId":"usage/sections/tsl","unlisted":false},{"type":"link","label":"Configuring and Using Tally Arbiter Cloud","href":"/TallyArbiter/docs/usage/sections/cloud","docId":"usage/sections/cloud","unlisted":false}]},{"type":"link","label":"Troubleshooting","href":"/TallyArbiter/docs/usage/troubleshooting","docId":"usage/troubleshooting","unlisted":false}]},{"type":"category","label":"Developers","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Creating your own listener client","href":"/TallyArbiter/docs/developers/own-listener-client","docId":"developers/own-listener-client","unlisted":false},{"type":"link","label":"Developing TallyArbiter itself","href":"/TallyArbiter/docs/developers/tally-arbiter","docId":"developers/tally-arbiter","unlisted":false},{"type":"link","label":"Former REST API","href":"/TallyArbiter/docs/developers/rest-api","docId":"developers/rest-api","unlisted":false}]}]},"docs":{"developers/own-listener-client":{"id":"developers/own-listener-client","title":"Creating your own listener client","description":"Tally Arbiter can send data over the socket.io protocol to your listener. You can make use of the following event emitters:","sidebar":"tutorialSidebar"},"developers/rest-api":{"id":"developers/rest-api","title":"Former REST API","description":"As of version 3.0.0 there\'s no REST API anymore. Due to the complexity, all communication of the UI and the backend is handled with socket.io. If you really need to build your own UI for TallyArbiter, you need to send and listen to the socket.io events.","sidebar":"tutorialSidebar"},"developers/tally-arbiter":{"id":"developers/tally-arbiter","title":"Developing TallyArbiter itself","description":"Information on how to contribute to TallyArbiter itself can be found in the project\'s readme.","sidebar":"tutorialSidebar"},"installation/cli":{"id":"installation/cli","title":"CLI","description":"Installation","sidebar":"tutorialSidebar"},"installation/desktop-app":{"id":"installation/desktop-app","title":"Desktop Application / Installer","description":"Installation","sidebar":"tutorialSidebar"},"installation/docker":{"id":"installation/docker","title":"Docker","description":"Installation","sidebar":"tutorialSidebar"},"installation/from-source":{"id":"installation/from-source","title":"Build and run from source","description":"Installation","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction","description":"Tally Arbiter is software that allows you to combine incoming tally data from multiple sources or video switchers such as Ross Carbonite (through the TSL 3.1 protocol), Blackmagic ATEM or VideoHub, OBS Studio, VMix, etc. and arbitrate the bus state across all of the sources so that devices like cameras can accurately reflect tally data coming from those multiple locations without each device having to be connected to all sources simultaneously.","sidebar":"tutorialSidebar"},"usage/control-interface":{"id":"usage/control-interface","title":"Control Interface","description":"TallyArbiter runs an HTTP server listening on port 4455. If this port is in use and cannot be opened, you will receive an error.","sidebar":"tutorialSidebar"},"usage/sections/cloud":{"id":"usage/sections/cloud","title":"Configuring and Using Tally Arbiter Cloud","description":"Tally Arbiter can send source, device, and tally data from a local instance within a closed network to an instance of Tally Arbiter on another network that may be more acccessible for end users. This is helpful if your users need to access Tally Arbiter and you don\'t want to have them tunnel or connect into your private network, or if users are located remotely.","sidebar":"tutorialSidebar"},"usage/sections/devices":{"id":"usage/sections/devices","title":"Devices","description":"Devices represent your inputs (like cameras) that you want to track with tally data. Devices can be assigned different addresses or inputs by each source. In Tally Arbiter, you can create as many devices as you would like and give each one a helpful name and description.","sidebar":"tutorialSidebar"},"usage/sections/listener-clients":{"id":"usage/sections/listener-clients","title":"Remote Tally Viewing (Listener Clients)","description":"In addition to the multiple output action types that can be used to trigger any number of remote devices for a tally state, Tally Arbiter also supports \\"listener clients\\": devices and software that open websocket connections to the Tally Arbiter server and can receive data in real time to utilize tally information.","sidebar":"tutorialSidebar"},"usage/sections/sources":{"id":"usage/sections/sources","title":"Sources","description":"Sources represent all of the tally data that is generated. This is usually your video switcher or mixing software. Multiple sources can be added and they can all be different types.","sidebar":"tutorialSidebar"},"usage/sections/tsl":{"id":"usage/sections/tsl","title":"TSL 3.1 Protocol Conversion","description":"Tally Arbiter can automatically send out TSL 3.1 data to any number of clients. This is helpful if you want to have Tally Arbiter aggregate all of your tally data and then send out updates to UMDs, multiviewers, etc.","sidebar":"tutorialSidebar"},"usage/troubleshooting":{"id":"usage/troubleshooting","title":"Troubleshooting","description":"If something does not work, please have a look at the Logs first. You can find them on the Settings page in the Logs tab. Change the loglevel to Verbose in order to see all messages.","sidebar":"tutorialSidebar"}}}')}}]);